골반 왼쪽으로 더 틀어

https://gist.github.com/sigmadream/f69066c2141012f3857840bcde9a81c8 을 application.yml 파일로 복붙하고

show_sql 이 false로 되있을 경우 true로 바꿔준다. 
이후 localhost:8080 시 서버가 정상적으로 구동되는 것을 볼 수 있으며 localhost:8080/h2-console을 입력하면
DB에 접근할 수있다.

예제는 101페이지 102페이지 를 보면된다

27일 1교시 실습 -= 설정파일 설정  및 의존성들의 의미  및 프레임워크 설명


annotation정의

@Entity 아래쪽 클래스가 데이터베이스이길원하면 붙여준다.
@Table(name = "***") 일반적으로 name값을 줘서 데이터베이스 테이블의 이름을 알려준다. default는 대문자로 준다.
@ID //제일 중요한 프라이머리킷 PK대신에 ID를 준다.
@Column 필드와 테이블의 컬럼을 맵핑시켜준다. - RDBMS 테이블에서 특정한 단순 자료형의 이련의 데이터값과 테이블에서의 각 열을 말함
@GeneratedValue(Stretegy = GerationType.IDENTITY) 데이터베이스에서 자동으로 생성되는 값이 순차적으로 된다. AUTO로 해도 문제없다.
@Enumerated(EnumType.STRING) 이뉴머레이트 타입은 원래 정수타입인데 DB에는 0, 1을 넣으면 안된다. 앵간해선 STRING로 박아놓는게 편하다.
보드타입은 프리 노티스를 선택하게 하는거

PRIMARY KEY 기본적인 제약조건
테이블에 저장된 데이터를 구분하기 위한 제약조건입니다.

--테스트 코드

@RunWith(SpringRunner.class) 보드테스트는 데이트 JPA테스트로 등록해줘 -== 원래파일 돌릴떄  스프링러너를 같이 돌려줘
@DataJpaTest 데이터 JPA테스트다
@Before 테스트코드 실행하기전에 이거부터 만들어줘
@Test 이거 테스트해줘

보통은 init() 메소드로 한다.
보드 객체를 만들기위해 우리는 보드로 간다.
우리는 세터는 안만든다. 겟터는 만든다. 여기서 부터는 롬복
@Entity위에다가 @Getter을 친다 이거 겟터다
@NoArgsConstructor 디폴트 생성자를 의미함

@Entity랑 @Table는 JPA꺼
@Getter랑 @NoargsConstructor은 롬복꺼

생성자를 생성한다 각 파라미터마다
그리고 @Builder를 써라 회사에선 @Builder를 생성자 바로위에 붙인다. 예제 같은경우에는 클래스위에다가 붙여놓는다.
new가 아니라 메서드 체이닝을 이용해서 객체를 생성한다. boardType는 생성하지 않는다. 왜냐면 안만들었기 때문에

프로퍼티 값을 담고 있고 이 값이 다른 값과 연관되어 있을 때 프로퍼티라 부른다. 변수와 유사하다고 생각할 수 있지만 변수와는 다르게 공백 기호 숫자로 시작하는 유효하지 않는 변수명도 사용할 수 있다. 하지만 유효하지 않으 ㄴ변수명으로 프로퍼티 이름을 짓게되면 점표기법으로 호출을 할 수 없게 됩니다.
마소에서 정의한 프로퍼티 properties store data for an object(프로퍼티는 오브젝트를 위해서 데이터를 저장한다)

스코프를 연다 스코프를 닫는다. == 변수가 존재할 수 있는 영역을 확장한다. 변수가 존재할 수 있는 영역을 제한한다. <----이 역활을 {} 이친구들이 합니다.
27일 수업은 lombok오류로 인하여 테스트케이스를 돌려보지 못하고 종료 ---- 
 실습에 관한건 39분까지 보면된다.



